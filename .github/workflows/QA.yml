name: QA Branch Workflow

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [QA]
    # Only trigger a workflow when changes have been made to files in the below mentioned path.
    paths:
      - "force-app/**"
env:
  SF_ORG__QA__AUTH_URL: ${{ secrets.SF_ORG__QA__AUTH_URL }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Deploy_To_QA:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #Choose the docker image from which the container should be created
    container:
      image: sanyamc2304/sfdx-delta-deployment:latest 
      #sanyamc2304/sfdxdelta:npmdelta
      #sanyamc2304/sfdx-di:cliupdate 
      #sanyamc2304/sfdx-delta-image:gitupdate 
      #abhisheksaxena7/sfdx-git-delta:latest
      options: --user 0:0 --privileged
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Authorize Org
        run: |
          echo $SF_ORG__QA__AUTH_URL > authURLFile
          sfdx force:auth:sfdxurl:store -f authURLFile -s -a QA
      - name: Install SFDX Delta plugin
        run: echo y | sfdx plugins:install sfdx-git-delta
      - name: Differential Deployment
        run: |
          sfdx sgd:source:delta --from $(git describe --match "qa-*" --abbrev=0 --tags HEAD) --to HEAD --output . --ignore .forceignore
          echo "--- package.xml generated with added and modified metadata from $(git describe --match "qa-*" --abbrev=0 --tags HEAD)---"
          cat package/package.xml
          echo "--- destructiveChanges.xml generated with deleted metadata ---"
          cat destructiveChanges/destructiveChanges.xml
          sfdx force:source:deploy -x package/package.xml
          sfdx force:mdapi:deploy -d destructiveChanges/destructiveChanges.xml
          sfdx force:mdapi:deploy:report
          echo "Deleted Sucesfully"
      - name: create tag
        run: |
          git tag qa-$(date +"%Y%m%d%H%M%S")
          git push --tags
          
# This workflow contains a single job called "build"
  Validate_To_SIT:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #Choose the docker image from which the container should be created
    container:
      image: sanyamc2304/sfdx-delta-deployment:latest
      options: --user 0:0 --privileged
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow --tags

      - name: Authorize Org
        run: |
          echo $SF_SIT_ORG__AUTH_URL > authURLFile
          sfdx force:auth:sfdxurl:store -f authURLFile -s -a SIT
      - name: Differential Deployment
        run: |
          sfdx sgd:source:delta --from $(git describe --match "sit-*" --abbrev=0 --tags HEAD) --to HEAD --output . --ignore .forceignore
          echo "--- package.xml generated with added and modified metadata from $(git describe --match "sit-*" --abbrev=0 --tags HEAD)---"
          cat package/package.xml
          sfdx force:source:deploy -x package/package.xml --checkonly
          
